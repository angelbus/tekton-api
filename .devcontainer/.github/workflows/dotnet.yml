name: dotnet-cicd
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      push_to_docker:
        type: boolean
        description: Docker Push
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Environment Setup
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Test
      run: dotnet test --no-build --verbosity normal
  docker:
    name: Publish
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - if: github.event.inputs.push_to_docker == 'true'
        name: Build FSH .NET Web API Image
        working-directory: ./
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/tekton-webapi:1.0.0 -f Dockerfile .
	      docker push ${{ secrets.DOCKER_USERNAME }}/tekton-webapi:1.0.0
  deploy:
    name: Deploy
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
        id-token: write
        contents: read
    steps:
      - name: Configure AWS credentials from Test account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_SECRET_REGION }}
          AWS_DEFAULT_OUTPUT: json
      - run: aws ecs update-service --force-new-deployment --service tekton-webapi --cluster ${{ secrets.AWS_ECS_CLUSTER }}